	# cd to script dir
set scriptDir [file normalize [file dirname [info script]]]
cd $scriptDir

	# Start bash

exp_spawn bash --rcfile bashrc
expect -re "bashdots@(.*)>"
	# Retrieve prompt with working dir
set prompt "bashdots@$expect_out(1,string)"
	# Source script in bash
send "source ../../dots.bash\n"
expect -re $prompt> 




set dirs ""
set dots .
for {set i 1} {$i < 8} {incr i} {
	set test "${i}up with argument - non-existing-dir"
	set dir "$i-1"
	set dots $dots.
  		# Previous working directory
	set pwd [join $dirs "/"];
 	if [llength $dirs] {
		set pwd $pwd/
	}; # if
	set dirs [concat $dirs $dir]
	set cwd  [join $dirs "/"]
	send "cd $scriptDir/fixture1/$cwd\r"
	expect -re $prompt/fixture1/$cwd>
		# Send command
	set cmd "$dots non_existing_dir"
	send "$cmd\r"
		# Bash should've stayed in the same directory
	set expected "^$cmd\r\nbash: cd: .*$prompt/fixture1/$cwd>$"
	expect {
		-re $expected { pass $test }
		-re $prompt.*> { fail "$test at prompt (expected '$expected', output: '$expect_out(buffer)'" }
		eof       { fail "$test at eof" }
		timeout   { fail "$test at timeout" }
	}; # expect
}; # for



set dirs ""
set dots .
for {set i 1} {$i < 8} {incr i} {
	set test "${i}up without argument"
	set dir "$i-1"
	set dots $dots.
  		# Previous working directory
	set pwd [join $dirs "/"];
 	if [llength $dirs] {
		set pwd $pwd/
	}; # if
	set dirs [concat $dirs $dir]
	set cwd  [join $dirs "/"]
	send "cd $scriptDir/fixture1/$cwd\r"
	expect -re $prompt/fixture1/$cwd>
		# Send command
	set cmd "$dots"
	send "$cmd\r"
	set expected "^$cmd\r\n$prompt/fixture1>$"
	expect {
		-re $expected { pass $test }
		-re $prompt.*> { fail "$test at prompt (expected '$expected', output: '$expect_out(buffer)'" }
		eof       { fail "$test at eof" }
		timeout   { fail "$test at timeout" }
	}; # expect
}; # for


set dirs ""
set dots .
for {set i 1} {$i < 8} {incr i} {
	set test "${i}up with argument-completion"
	set dir  "$i-1"
	set dots $dots.
  		# Previous working directory
	set pwd [join $dirs "/"];
 	if [llength $dirs] {
		set pwd $pwd/
	}; # if
	set dirs [concat $dirs $dir]
	set cwd  [join $dirs "/"]
	send "cd $scriptDir/fixture1/$cwd\r"
	expect -re $prompt/fixture1/$cwd>
		# Try completion
	set cmd "$dots ${pwd}$i-"
	send "$cmd\t"
	set expected "^$cmd\r\n${pwd}$i-1/  ${pwd}$i-2/  \r\n$prompt/fixture1/$cwd>$cmd$"
	expect {
		-re $expected  { pass "$test" }
		-re $prompt.*> { fail "$test at prompt (expected '$expected', output: '$expect_out(buffer)'" }
		eof       { fail "$test at eof" }
		timeout   { fail "$test at timeout" }
	}; # expect


	set test "${i}upped with argument-completion"
		# Try to really cd
	send "1\n"
	set expected $prompt/fixture1/$cwd>
	expect {
		-re $expected    { pass "$test" }
		-re $prompt.*>   { fail "$test at prompt (expected '$expected', output: '$expect_out(buffer)'" }
		eof              { fail "$test at eof" }
		timeout          { fail "$test at timeout" }
	}; # expect
}; # for



send "\nexit\n"
