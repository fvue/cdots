set prompt "bashdots@.*> "
	# cd to script dir
set scriptDir [file normalize [file dirname [info script]]]
cd $scriptDir

	# Start bash

exp_spawn bash --rcfile bashrc
expect -re $prompt 
send "source ../../dots.bash\n"
expect -re $prompt 




set test "1upNonExisting"
send "cd $scriptDir/fixture1/1-1\n"
expect -re $prompt
	# Try completion
send ".. non_existing_dir\r"
expect {
		# .*\r\nfixture/1-1>
        # --+--'`-----+------
        #   |         +--> prompt; bash should've stayed in the same directory
		#   +--> error message; e.g. "bash: cd: non_existing_dir: No such file or directory"
	-re "bashdots@.*fixture1/1-1> "     { pass "$test" }
	-re $prompt                { fail "$test at prompt (output: '$expect_out(buffer)'" }
	eof                        { fail "$test at eof" }
	timeout                    { fail "$test at timeout (output: $expect_out(buffer)" }
}




set test "1up"
send "cd $scriptDir/fixture1/1-1\r"
expect -re $prompt 
	# Try completion
set cmd ".. 1-"; send "$cmd\t"
expect {
	-re "\r\n1-1/  1-2/  \r\n$prompt$cmd" { pass "$test" }
	-re $prompt                { fail "$test at prompt (output: '$expect_out(buffer)'" }
	eof                        { fail "$test at eof" }
	timeout                    { fail "$test at timeout" }
}

set test "1upped"
	# Try to really cd
send "1\n"
expect {
	-re "1-1> "      { pass "$test" }
	-re $prompt      { fail "$test at prompt (output: '$expect_out(buffer)'" }
	eof              { fail "$test at eof" }
	timeout          { fail "$test at timeout" }
}




set test "2up"
send "cd $scriptDir/fixture1/1-1/2-1\n"
expect -re $prompt
	# Try completion
set cmd "... 1-1/2-"; send "$cmd\t"
expect {
	-re "\r\n1-1/2-1/  1-1/2-2/  \r\n$prompt$cmd"   { pass "$test" }
	-re $prompt      { fail "$test prompt" }
	eof              { fail "$test at eof" }
	timeout          { fail "$test at timeout" }
}
set test "2upped"
	# Try to really cd
send "1\n"
expect {
	-re "1-1/2-1> "  { pass "$test" }
	-re $prompt      { fail "$test at prompt" }
	eof              { fail "$test at eof" }
	timeout          { fail "$test at timeout" }
}



set test "3up"
send "cd $scriptDir/fixture1/1-1/2-1/3-1\n"
expect -re $prompt
	# Try completion
set cmd ".... 1-1/2-1/3-"; send "$cmd\t"
expect {
	-re "\r\n1-1/2-1/3-1/  1-1/2-1/3-2/  \r\n$prompt$cmd"   { pass "$test" }
	-re $prompt      { fail "$test prompt" }
	eof              { fail "$test at eof" }
	timeout          { fail "$test at timeout" }
}
set test "3upped"
	# Try to really cd
send "1\n"
expect {
	-re "1-1/2-1/3-1> "  { pass "$test" }
	-re $prompt      { fail "$test at prompt" }
	eof              { fail "$test at eof" }
	timeout          { fail "$test at timeout" }
}

send "\nexit\n"
